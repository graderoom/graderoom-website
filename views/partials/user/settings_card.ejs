<!-- Settings Card -->
<div class="blurred-login" id="settingsCardDisplay">
    <div class="blurred-background"></div>
    <div class="col-sm-11 col-md-10 col-lg-9 col-xl-8 mx-auto">
        <div id="settingsCard" class="card card-signin my-5" style="padding-bottom: 1rem">
            <btn class="btn btn-md"
                 onclick="closeForm('settingsCardDisplay')"
                 style="display: table; width: fit-content; width: -moz-fit-content; margin-bottom:0">
                <i class="fa fa-close" aria-hidden="true"></i> Close
            </btn>
            <div class="card-body">
                <h1 class="card-title text-center popup" style="margin: 0;"><i class="fa fa-cog"></i>
                    Settings
                </h1>
            </div>
            <div class="tab">
                <btn id="btn-0" class="tablinks donate-nav-item" onclick="openTab(0)"><span class="donate"><span
                                class="inner-donate">Donate</span></span>
                </btn>
                <btn id="btn-1" class="tablinks active" onclick="openTab(1)">Appearance</btn>
                <btn id="btn-2" class="tablinks" onclick="openTab(2)">Account</btn>
                <btn id="btn-3" class="tablinks" onclick="openTab(3)">Advanced</btn>
                <btn id="btn-4" class="tablinks" onclick="openTab(4)">Help</btn>
                <btn id="btn-5" class="tablinks" onclick="openTab(5)">About</btn>
                <% if (_betaFeatures.active) { %>
                    <btn id="btn-5" class="tablinks" onclick="openTab(6)">Experiments</btn>
                <% } %>
            </div>
            <div id="settings-0" class="tabcontent">
                <div class="card-body">
                    <div class="card-footer">
                        <h3>What You Get</h3>
                        <p>
                            The goal of Donation-based features is to reward those who support the maintenance of this website.
                            Below is the current list of features that are unlocked by donating.
                            The feature list is subject to change at any time.
                            These features will never affect the core functionality of the site.
                            Scroll down to view donation options.
                        </p>
                        <div id="donationWhatYouGetContainer">
                            <table id="donationWhatYouGet" style="width: 100%">
                                <thead>
                                <tr><th>Feature</th><th>Free</th><th>Donor<br><b>$0.01+</b></th><th><span class="plus label-background"><span class="plus-label">PLUS</span></span><br><b>$3.00+</b></th><th><span class="premium label-background"><span class="premium-label">PREMIUM</span></span><br><b>$5.00+</b></th></tr>
                                </thead>
                                <tbody>
                                <tr><th><span>Access class average for latest assignment in each course</span></th><td class="supported"></td><td class="previous"></td><td class="previous"></td><td class="previous"></td></tr>
                                <tr><th><span>Get a Donor role on Discord</span></th><td></td><td class="supported"></td><td class="previous"></td><td class="previous"></td></tr>
                                <tr><th><span>Maximum Requests per Minute</span></th><td class="supported text">30</td><td class="supported text">40</td><td class="supported text">60</td><td class="supported text">100</td></tr>
                                <tr><th><span>Sync Cooldown</span></th><td class="supported text">4 hr</td><td class="supported text">2 hr</td><td class="supported text">1 hr</td><td class="supported text">15 min</td></tr>
                                <tr><th><span>Ability to set custom class colors</span></th><td></td><td></td><td class="supported"></td><td class="previous"></td></tr>
                                <tr><th><span>Bypass the sync queue</span></th><td></td><td></td><td class="supported"></td><td class="previous"></td></tr>
                                <tr><th><span>View what other teachers teach a course and how many Graderoom users are in those classes</span></th><td></td><td></td><td class="supported"></td><td class="supported"></td></tr>
                                <tr><th><span>Access class averages for all assignments</span></th><td></td><td></td><td></td><td class="supported"></td></tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="card-footer">
                        <h4>Want to support Graderoom?</h4>
                        <p>Graderoom is a free service to make your academic lives less stressful and more fun.
                            You
                            are already showing support just by using this project we made for fun. If you want
                            to go
                            above
                            and
                            beyond, feel free to send us a donation.
                        </p>
                        <span><b>Include your name or username</b> in your donation message, so we can match the donation
                            to your
                            Graderoom account.</span>
                        <span>After donating, it may take some time before your donation is processed and appears in
                            your Graderoom <a href="#" onclick="openTab(2)">Account tab</a>.</span>
                    </div>
                    <div class="donation-container">
                        <div class="card-footer">
                            <div id="venmo"></div>
                            <br>
                            <span>If the QR Code doesn't work, you can <a target="_blank"
                                                                          href="https://account.venmo.com/u/jojejo">Click
                                    Here
                                    for Venmo</a></span>
                        </div>
                        <div class="card-footer">
                            <div id="zelle"></div>
                            <br>
                            <span>If you prefer a different method, feel free to contact me through <a href="#"
                                                                                                       style="display: inline"
                                                                                                       onclick="openTab(4)">the
                                    Help tab</a>.</span>
                        </div>
                        <div class="card-footer">
                            <p>If you would like to use PayPal, use this donate button.
                                <b>PayPal takes a significant cut of any donation you make</b>, and this will be
                                reflected
                                in your actual donation amount. Using one of the other methods is highly preferred.
                            </p>
                            <div id="donate-button-container"
                                 style="margin-top: 20px; display: flex; align-items: center; justify-content: center">
                                <div id="donate-button"></div>
                                <script src="https://www.paypalobjects.com/donate/sdk/donate-sdk.js"
                                        charset="UTF-8"></script>
                                <script>
                                    PayPal.Donation.Button({
                                                               env: "production",
                                                               hosted_button_id: "UGSEZPLL7RLFY",
                                                               image: {
                                                                   src: "https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif",
                                                                   alt: "Donate with PayPal button",
                                                                   title: "PayPal - The safer, easier way to pay online!"
                                                               }
                                                           }).render("#donate-button");
                                </script>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer" style="display:none">
                        <h5>Contribute to Graderoom on Github</h5>
                    </div>
                </div>
            </div>
            <div id="settings-1" class="tabcontent show">
                <div class="card-body">
                    <% if (_gradeData.length > 0) { %>
                        <div class="card-footer">
                            <h5>Color Scheme</h5>
                            <div id="color-scheme-picker-container">
                                <div>
                                    <label class="slider-container" style="<% if (_appearance.colorPalette === "custom") { %>display: none<%}%>">
                                        <label class="switch">
                                            <input id="shuffleToggle" type="checkbox"
                                                   name="shuffleColors" onchange="setColorPalette()"
                                            <% if (_appearance.shuffleColors) { %>
                                                   checked
                                                    <% } %>
                                            >
                                            <span class="slider"></span>
                                        </label>
                                        <label for="shuffleToggle">
                                            Shuffle Colors
                                        </label>
                                    </label>
                                    <hr>
                                    <div id="color-scheme-picker">
                                        <div id="pale">
                                            <button onclick="setColorPalette('pale')"
                                                    class="btn btn-med">
                                                Pale
                                            </button>
                                            <i class="fa fa-check"
                                               style="<% if (_appearance.colorPalette !== "pale") { %>opacity: 0;<% } %>"></i>
                                        </div>
                                        <div id="pastel">
                                            <button onclick="setColorPalette('pastel')"
                                                    class="btn btn-med">
                                                Pastel
                                            </button>
                                            <i class="fa fa-check"
                                               style="<% if (_appearance.colorPalette !== "pastel") { %>opacity: 0;<% } %>"></i>
                                        </div>
                                        <div id="clear">
                                            <button onclick="setColorPalette('clear')"
                                                    class="btn btn-med">
                                                Clear
                                            </button>
                                            <i class="fa fa-check"
                                               style="<% if (_appearance.colorPalette !== "clear") { %>opacity: 0;<% } %>"></i>
                                        </div>
                                        <div id="bright">
                                            <button onclick="setColorPalette('bright')"
                                                    class="btn btn-med">
                                                Bright
                                            </button>
                                            <i class="fa fa-check"
                                               style="<% if (_appearance.colorPalette !== "bright") { %>opacity: 0;<% } %>"></i>
                                        </div>
                                        <div id="dull">
                                            <button onclick="setColorPalette('dull')"
                                                    class="btn btn-med">
                                                Dull
                                            </button>
                                            <i class="fa fa-check"
                                               style="<% if (_appearance.colorPalette !== "dull") { %>opacity: 0;<% } %>"></i>
                                        </div>
                                        <div id="custom">
                                            <button onclick="<% if (plus || premium) { %>setColorPalette('custom')<%}%>"
                                                    class="btn btn-med"
                                                    <% if (!plus && !premium) { %>disabled<% } %>
                                            >
                                                Custom<% if (!plus && !premium) { %>&nbsp;<span class="plus label-background"><span class="plus-label">PLUS</span></span><% } %>
                                            </button>
                                            <i class="fa fa-check"
                                               style="<% if (_appearance.colorPalette !== "custom") { %>opacity: 0;<% } %>"></i>
                                        </div>
                                    </div>
                                </div>
                                <div class="text-center" id="classColors">
                                    <% let _offset = 0; %>
                                    <% for (var i = 0; i < _gradeData.length; i++) { %>
                                        <% if (_appearance.showNonAcademic || _relevantClassData[_gradeData[i].class_name]["classType"] !== "non-academic") { %>
                                            <label id="classColor<%= i + _offset; %>"
                                                   style="color: <%= _appearance.classColors[i]; %>;">
                                                <%= _gradeData[i].class_name; %><span class="editClassColor"></span>
                                            </label>
                                            <input class="editClassColor <% if (_appearance.colorPalette === "custom") { %>visible<% } %>" type="color" id="customColor<%= i + _offset; %>" onchange="updateCustomColor(<%= i%>, this.value)" value="<%= _appearance.classColors[i] %>">
                                        <% } else {
                                            _offset--;
                                        } %>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    <% } %>
                    <div class="card-footer">
                        <h5>Theme</h5>
                        <div id="theme">
                            <div id="themeMessage"
                                 class="alert alert-success alert-dismissible font-weight-bold"
                                 style="display:none">
                                <div style="display:none" class="sk-chase-mini">
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                </div>
                                <div class="messageTxt"></div>
                                <a class="close" onclick="closeMessage('themeMessage')" aria-label="close">X</a>
                            </div>
                            <label style="cursor: pointer"> <input style="cursor: inherit" type="radio"
                                                                   value="light"
                                                                   name="theme"
                                                                   onchange="$('#sun-limits-container, #auto-limits-container').hide();
                                                                               changeSetting('theme', {theme: 'light'})"
                                <% if (_appearance.theme === "light") { %> checked
                                        <% } %>
                                > Always Light
                            </label>
                            <br>
                            <label style="cursor: pointer"> <input style="cursor: inherit" type="radio"
                                                                   value="dark"
                                                                   name="theme"
                                                                   onchange="$('#sun-limits-container, #auto-limits-container').hide();
                                                                               changeSetting('theme', {theme: 'dark'})"
                                <% if (_appearance.theme === "dark") { %> checked
                                        <% } %>
                                > Always Dark</label>
                            <br>
                            <label class="disable-when-system-theme-not-supported"
                                   style="cursor: pointer; align-items: center"><input
                                        style="cursor: inherit" type="radio"
                                        value="system"
                                        name="theme"
                                        onclick="$('#sun-limits-container, #auto-limits-container').hide();
                                                                               changeSetting('theme', {theme: 'system'})"
                                <% if (_appearance.theme === "system") { %> checked
                                        <% } %>
                                > Match System
                                <span id="prefers-color-scheme"
                                      style="margin-left: 0.5rem; opacity: 0.5; font-size: 0.6rem;"></span>
                                <span style="margin-left: 0.5rem;"
                                      class="popup show-when-system-theme-not-supported"><i
                                            class="fa fa-exclamation-circle"><span
                                                class="popup-right always-show"
                                                style="width: 10rem;">Your
                                            browser does not support this option.</span></i></span>
                            </label>
                            <br>
                            <label style="cursor: pointer"> <input style="cursor: inherit" type="radio"
                                                                   value="sun"
                                                                   name="theme"
                                                                   onchange="$('#auto-limits-container').hide();
                                                                       $('#sun-limits-container').show();
                                                                       changeSetting('theme', {theme: 'sun'})"
                                <% if (_appearance.theme === "sun") { %> checked
                                        <% } %>
                                > Dark from Sunset to Sunrise</label>
                            <div id="sun-limits-container"
                                 style="<% if (_appearance.theme !== "sun") { %>display: none;<% } %>font-size: 0.9rem; margin-bottom: 0; width: fit-content; width: -moz-fit-content">
                                <label class="form-group" id="sunLimits"
                                       style="display: flex; white-space: nowrap; margin-bottom: 0">
                                    <label style="vertical-align: center; width: 8rem" for="sunModeStart">
                                        Dark theme from
                                    </label>
                                    <input id="sunModeStart"
                                           style="padding: 0 0.75rem 0 0.75rem"
                                           type="time"
                                           class="text-center form-control"
                                           value="<%= ("0" + sunset.getHours()).slice(-2) + ":" + ("0" + sunset.getMinutes()).slice(-2) %>"
                                           disabled>
                                    <label style="margin-left: 0.25rem" for="sunModeFinish">
                                        to
                                    </label>
                                    <input id="sunModeFinish"
                                           style="padding: 0 0.75rem 0 0.75rem"
                                           type="time"
                                           class="text-center form-control"
                                           value="<%= ("0" + sunrise.getHours()).slice(-2) + ":" + ("0" + sunrise.getMinutes()).slice(-2) %>"
                                           disabled>
                                </label>
                            </div>
                            <br>
                            <label style="cursor: pointer"> <input style="cursor: inherit" type="radio"
                                                                   value="auto"
                                                                   name="theme"
                                                                   onchange="$('#auto-limits-container').show().css('display','flex');
                                                                                $('#sun-limits-container').hide();
                                                                       changeSetting('theme', {theme: 'auto', darkModeStart: darkModeStart, darkModeFinish: darkModeFinish})"
                                <% if (_appearance.theme === "auto") { %> checked
                                        <% } %>
                                > Dark on Custom Schedule</label>
                            <div id="auto-limits-container"
                                 style="<% if (_appearance.theme !== "auto") { %>display: none;<% } else { %>display: flex;<% } %>font-size: 0.9rem; margin-bottom: 0; align-items: stretch">
                                <label class="form-group" id="autoLimits"
                                       style="display: flex; white-space: nowrap;">
                                    <label style="vertical-align: center; width: 8rem" for="darkModeStart">
                                        Dark theme from
                                    </label>
                                    <% let _startDate = new Date(_appearance.darkModeStart);
                                    let _endDate = new Date(_appearance.darkModeFinish); %>
                                    <input id="darkModeStart"
                                           style="padding: 0 0.75rem 0 0.75rem"
                                           type="time"
                                           class="text-center form-control dont-clear" name="darkModeStart"
                                           onchange="darkModeStart = new Date('0/' + $(this).val()).getTime(); changeSetting('theme', {theme: 'auto', darkModeStart: darkModeStart, darkModeFinish: darkModeFinish})"
                                           value="<%= ("0" + _startDate.getHours()).slice(-2) + ":" + ("0" + _startDate.getMinutes()).slice(-2) %>"
                                    >
                                    <label style="margin-left: 0.25rem" for="darkModeFinish">
                                        to
                                    </label>
                                    <input id="darkModeFinish"
                                           style="padding: 0 0.75rem 0 0.75rem;"
                                           type="time"
                                           class="text-center form-control dont-clear" name="darkModeFinish"
                                           onchange="darkModeFinish = new Date('0/' + $(this).val()).getTime(); changeSetting('theme', {theme: 'auto', darkModeStart: darkModeStart, darkModeFinish: darkModeFinish})"
                                           value="<%= ("0" + _endDate.getHours()).slice(-2) + ":" + ("0" + _endDate.getMinutes()).slice(-2) %>"
                                    >
                                </label>
                            </div>
                        </div>
                        <hr>
                        <label class="slider-container disable-in-firefox">
                            <label class="switch">
                                <input
                                        id="blurEffectsToggle"
                                        style="margin: 0; display: flex"
                                        type="checkbox"
                                        name="blurEffects"
                                <% if (_appearance.blurEffects) { %>
                                        checked="checked"
                                        <% } %>
                                        onchange="changeSetting('theme', {theme: appearance.theme, blurEffects: !appearance.blurEffects})"
                                >
                                <span class="slider"></span>
                            </label>
                            <label for="blurEffectsToggle">
                                <span>Enable Blur Effects</span> <span class="popup"><i
                                            class="fa fa-question-circle"><span
                                                class="popup-right-bottom">When enabled, adds blur effects across
                                            the site.
                                        </span></i></span> <span class="popup hide-in-firefox"><i
                                            class="fa fa-exclamation-triangle">
                                        <span class="popup-right-bottom">WARNING: Causes lag on slower
                                            devices</span></i></span>
                            </label>
                            <span style="margin-left: 0.5rem;" class="popup show-in-firefox"><i
                                        class="fa fa-exclamation-circle"><span
                                            class="popup-right always-show"
                                            style="width: 10rem;">Your
                                        browser does not support these effects.</span></i></span>
                        </label>
                        <label class="slider-container">
                            <label class="switch">
                                <input id="seasonalEffectsToggle" type="checkbox"
                                       name="enableSeasonalEffects"
                                <% if (_appearance.seasonalEffects) { %>
                                       checked
                                        <% } %>
                                       onchange="changeSetting('theme', {theme: appearance.theme, seasonalEffects: !appearance.seasonalEffects})"
                                >
                                <span class="slider"></span>
                            </label>
                            <label for="seasonalEffectsToggle">
                                <span>Enable Seasonal Effects</span> <span class="popup"><i
                                            class="fa fa-question-circle"><span
                                                class="popup-right-bottom">When enabled, adds seasonal effects
                                            across the site.
                                        </span></i></span>
                            </label>
                        </label>
                    </div>
                    <div class="card-footer">
                        <h5>Charts</h5>
                        <div>
                            <label class="slider-container">
                                <label class="switch">
                                    <input
                                            id="classGraphRegularizationToggle"
                                            style="margin: 0; display: flex"
                                            type="checkbox"
                                            name="regularizeClassGraphs"
                                    <% if (_appearance.regularizeClassGraphs) { %>
                                            checked="checked"
                                            <% } %>
                                            onchange="changeSetting('regularizeClassGraphs', !appearance.regularizeClassGraphs)"
                                    >
                                    <span class="slider"></span>
                                </label>
                                <label for="classGraphRegularizationToggle">
                                    Regularize Class Graphs <span class="popup"><i
                                                class="fa fa-question-circle"><span
                                                    class="popup-right-bottom">When enabled, all class graphs
                                                are
                                                bounded between at 70 and 110 on the y-axis</span></i></span>
                                </label>
                            </label>
                            <label class="slider-container">
                                <label class="switch">
                                    <input
                                            id="showPlusMinusLinesToggle"
                                            style="margin: 0; display: flex"
                                            type="checkbox"
                                            name="showPlusMinusLines"
                                    <% if (_appearance.showPlusMinusLines) { %>
                                            checked="checked"
                                            <% } %>
                                            onchange="changeSetting('showPlusMinusLines', !appearance.showPlusMinusLines)"
                                    >
                                    <span class="slider"></span>
                                </label>
                                <label for="showPlusMinusLinesToggle">
                                    Show horizontal lines at + and - letter grades <span class="popup"><i
                                                class="fa fa-question-circle"><span
                                                    class="popup-right-bottom">When enabled, adds additional guidelines
                                                at the +/- letter grades</span></i></span>
                                </label>
                            </label>
                        </div>
                    </div>
                    <div class="card-footer">
                        <h5>Accessibility</h5>
                        <div>
                            <label class="slider-container">
                                <label class="switch">
                                    <input
                                            id="reduceMotionToggle"
                                            style="margin: 0; display: flex"
                                            type="checkbox"
                                            name="reduceMotion"
                                    <% if (_appearance.reduceMotion) { %>
                                            checked="checked"
                                            <% } %>
                                            onchange="changeSetting('reduceMotion', !appearance.reduceMotion)"
                                    >
                                    <span class="slider"></span>
                                </label>
                                <label for="reduceMotionToggle">
                                    Reduce Motion <span class="popup"><i
                                                class="fa fa-question-circle"><span
                                                    class="popup-right-bottom">When enabled, animations will be reduced
                                                and disabled where possible.</span></i></span>
                                </label>
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div id="settings-2" class="tabcontent">
                <div class="card-body">
                    <div class="card-footer">
                        <p>Hover over each bar to see some of the features each tier gives you.</p>
                        <div style="display:flex; justify-content: space-between; align-items: center">
                            <div style="width: 100%">
                                <div class="progress" id="donationProgress">
                                    <div class="progress-bar progress-bar-striped progress-bar-animated"
                                         role="progressbar"></div>
                                    <div class="progress-bar progress-bar-striped progress-bar-animated"
                                         role="progressbar"></div>
                                    <div class="progress-bar progress-bar-striped progress-bar-animated"
                                         role="progressbar"></div>
                                    <div class="progress-bar progress-bar-striped progress-bar-animated"
                                         role="progressbar"></div>
                                    <div class="progress-bar" role="progressbar"></div>
                                </div>
                                <div class="progress" id="donationProgressOverlay">
                                    <div class="progress-bar" role="progressbar">FREE</div>
                                    <div class="progress-bar" role="progressbar">DONOR</div>
                                    <div class="progress-bar" role="progressbar">
                                        <span class="plus-label">PLUS</span>
                                    </div>
                                    <div class="progress-bar" role="progressbar">
                                        <span class="premium-label">PREMIUM</span>
                                    </div>
                                </div>
                                <div class="progress" id="donationHoverOverlay">
                                    <div class="progress-bar popup-holder" role="progressbar">
                                        <span class="popup">
                                            <span class="popup-bottom-right">
                                                <span>FREE</span>
                                                <span>Thanks for using Graderoom!</span>
                                                <span>Access class average for latest assignment in each course</span>
                                                <span>Make 30 requests per minute to the Graderoom server</span>
                                                <span>Sync once every 4 hours</span>
                                            </span>
                                        </span>
                                    </div>
                                    <div class="progress-bar popup-holder" role="progressbar">
                                        <span class="popup">
                                            <span class="popup-bottom">
                                                <span>$0.01+</span>
                                                <span class="previous">Thanks for using Graderoom!</span>
                                                <span class="previous">Access class average for latest assignment in each class</span>
                                                <span>Make <span class="strikethrough">30</span>40 requests per minute to the Graderoom server</span>
                                                <span>Sync once every <span class="strikethrough">4</span>2 hours</span>
                                                <span>Get a Donor role on Discord</span>
                                            </span>
                                        </span>
                                    </div>
                                    <div class="progress-bar popup-holder" role="progressbar">
                                        <span class="popup">
                                            <span class="popup-bottom">
                                                <span>$3.00+</span>
                                                <span class="previous">Thanks for using Graderoom!</span>
                                                <span class="previous">Access class average for latest assignment in each course</span>
                                                <span class="previous">Get a Donor role on Discord</span>
                                                <span>Make <span class="strikethrough">40</span>60 requests per minute to the Graderoom server</span>
                                                <span>Sync once every <span class="strikethrough">2 hours</span>1 hour</span>
                                                <span><span class="plus-label">PLUS</span> badge</span>
                                                <span>Ability to set custom class colors</span>
                                                <span>Bypass the sync queue</span>
                                                <span>View what other teachers teach a course and how many Graderoom users are in those classes</span>
                                            </span>
                                        </span>
                                    </div>
                                    <div class="progress-bar popup-holder" role="progressbar">
                                        <span class="popup">
                                            <span class="popup-bottom">
                                                <span>$5.00+</span>
                                                <span class="previous">Thanks for using Graderoom!</span>
                                                <span class="previous">Access class average for latest assignment in each course</span>
                                                <span class="previous">Get a Donor role on Discord</span>
                                                <span class="previous">Ability to set custom class colors</span>
                                                <span class="previous">Bypass the sync queue</span>
                                                <span class="previous">View what other teachers teach a course and how many Graderoom users are in those classes</span>
                                                <span>Make <span class="strikethrough">60</span>100 requests per minute to the Graderoom server</span>
                                                <span>Sync once every <span class="strikethrough">1 hour</span>15 minutes</span>
                                                <span><span class="strikethrough"><span class="plus-label">PLUS</span></span> <span class="premium-label">PREMIUM</span>&nbsp;&nbsp;badge</span>
                                                <span>Access class averages for ALL assignments</span>
                                            </span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br>
                        <div id="donations"></div>
                    </div>
                    <div class="card-footer">
                        <h5>
                            <% if (school === "basis") { %>Schoology
                            <% } else { %>PowerSchool
                            <% } %>
                            Sync Settings
                        </h5>
                        <form id="changeSchoolEmail" class="form-signin"
                              action="/changeschoolemail" method="post">
                            <div class="form-group">
                                <div id="emailChangeMessage"
                                     class="alert alert-success alert-dismissible font-weight-bold"
                                     style="display:none">
                                    <div style="display:none" class="sk-chase-mini">
                                        <div class="sk-chase-dot mini"></div>
                                        <div class="sk-chase-dot mini"></div>
                                        <div class="sk-chase-dot mini"></div>
                                        <div class="sk-chase-dot mini"></div>
                                        <div class="sk-chase-dot mini"></div>
                                        <div class="sk-chase-dot mini"></div>
                                    </div>
                                    <div class="messageTxt"></div>
                                    <a class="close" onclick="closeMessage('emailChangeMessage')"
                                       aria-label="close">X</a>
                                </div>
                                <div style="display: flex; flex-flow: row; justify-content: flex-start; align-items: center">
                                    <div class="input-group" style="margin-bottom: 0">
                                        <i class="email-bg"></i>
                                        <label for="school_email">School Email</label>
                                        <input oninput="checkLabel(this); $($(this)[0].form).find('button').prop('disabled',false)"
                                               id="school_email" type="text"
                                               class="form-control"
                                               name="school_email" required>
                                    </div>
                                    <button type="submit"
                                            onclick="ajaxPostForm('#changeSchoolEmail',[],'#emailChangeMessage', true); updateSchoolUsernameDisplay(); "
                                            class="btn btn-default btn-med"
                                            style="width: fit-content; width: -moz-fit-content;" disabled>
                                        Apply
                                    </button>
                                </div>
                            </div>
                        </form>
                        <btn style="margin-top: 0; margin-left: 0;" class="btn btn-sm" onclick="$('#syncGradesDiv').show(); $('#gradeSyncDiv').hide(); showCard('#updateGradesDisplay')">Change School Password</btn>
                        <form id="gradeSync" class="form-signin" action="/disableGradeSync" method="post">
                            <label style="white-space: nowrap; display: flex; font-size: 1rem; justify-content: flex-start; align-items: center">
                                <label class="switch">
                                    <input
                                            id="gradeSyncToggle"
                                            style="margin: 0; display: flex"
                                            type="checkbox"
                                            name="gradeSync"
                                    <% if (gradeSync) { %>
                                            checked
                                            <% } %>
                                            onchange="manageGradeSyncCheckbox(); setupTutorialPopups()"
                                    >
                                    <span class="slider"></span>
                                </label>
                                <label style="margin: 0 0 0 1rem; justify-content: center; align-items: center; cursor: pointer"
                                       onclick="$('#gradeSyncToggle').trigger('click')">GradeSync<span
                                            class="popup"><i class="fa fa-question-circle"
                                                             style="margin-left: 0.4rem"><span
                                                    class="popup-right-top">When enabled, Graderoom syncs whenever
                                                you
                                                login</span></i></span></label>
                            </label>
                        </form>
                    </div>
                    <form id="changePersonalInfo" class="card-footer form-signin" autocomplete="off">
                        <div class="form-group">
                            <h5>Personal Info
                                <span class="popup">
                                    <i class="fa fa-question-circle">
                                        <span class="popup-right">This information is derived from your school
                                            email.
                                            You can edit
                                            <% if (school !== "basis") { %>your first and last name
                                            <% } else { %>this data
                                            <% } %>
                                            .</span>
                                    </i>
                                </span>
                            </h5>
                            <div id="personalInfoChangeMessage"
                                 class="alert alert-success alert-dismissible font-weight-bold"
                                 style="display:none">
                                <div style="display:none" class="sk-chase-mini">
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                </div>
                                <div class="messageTxt"></div>
                                <a class="close" onclick="closeMessage('personalInfoChangeMessage')"
                                   aria-label="close">X</a>
                            </div>
                            <br>
                            <div style="display: flex; align-items: center; flex-basis: content; flex-wrap: wrap"
                                 id="personalInfo">
                                <div class="form-group input-group">
                                    <i class="user-bg"></i>
                                    <label class="label-active" for="firstName">First Name</label>
                                    <input oninput="checkLabel(this); checkFirstName(this, '#firstNameCheckMessage')"
                                           type="text" class="form-control dont-clear" name="first_name"
                                           id="firstName"
                                           value="<%= _personalInfo.firstName; %>">
                                    <span class="popup">
                                        <i>
                                            <span class="popup-top-left dont-show"
                                                  id="firstNameCheckMessage"></span></i>
                                    </span>
                                </div>
                                <div class="form-group input-group">
                                    <i class="user-bg"></i>
                                    <label class="label-active" for="lastName">Last Name</label>
                                    <input oninput="checkLabel(this); checkLastName(this, '#lastNameCheckMessage')"
                                           type="text" class="form-control dont-clear" name="last_name" id="lastName"
                                           value="<%= _personalInfo.lastName; %>">
                                    <span class="popup">
                                        <i>
                                            <span class="popup-top-left dont-show"
                                                  id="lastNameCheckMessage"></span></i>
                                    </span>
                                </div>
                                <div class="form-group input-group">
                                    <i
                                    <% if (school !== "basis") { %> style="filter: opacity(0.5)"
                                            <% } %>
                                                                    class="user-bg"></i>
                                    <label for="graduationYear"
                                    <% if (school !== "basis") { %> style="filter: opacity(0.5)"
                                            <% } %>
                                           class="label-active">Graduation Year</label>
                                    <input oninput="checkLabel(this); <% if (school === "basis") { %>checkGradYear(this, '#gradYearCheckMessage')<% } %>"
                                    <% if (school !== "basis") { %> style="filter: opacity(0.5)"
                                            <% } %>
                                           type="number" class="form-control" name="graduation_year"
                                           id="graduationYear"
                                           value="<%= _personalInfo.graduationYear; %>"
                                           <% if (school !== "basis") { %>disabled
                                            <% } %>
                                    >
                                    <% if (school !== "basis") { %>
                                        <span class="popup">
                                            <i class="fa fa-question-circle">
                                                <span class="popup-top-left">Changing your Graduation Year is not
                                                    supported</span></i>
                                        </span>
                                    <% } else if (school === "basis") { %>
                                        <span class="popup">
                                            <i>
                                                <span class="popup-top-left dont-show"
                                                      id="gradYearCheckMessage"></span></i>
                                        </span>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    </form>
                    <form id="changePassword" class="card-footer form-signin"
                          action="/changepassword"
                          method="post">
                        <div class="form-group">
                            <h5>Change Password</h5>
                            <div id="passwordChangeMessage"
                                 class="alert alert-success alert-dismissible font-weight-bold"
                                 style="display:none">
                                <div style="display:none" class="sk-chase-mini">
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                    <div class="sk-chase-dot mini"></div>
                                </div>
                                <div class="messageTxt"></div>
                                <a class="close" onclick="closeMessage('passwordChangeMessage')"
                                   aria-label="close">X</a>
                            </div>
                            <br>
                            <div class="input-group">
                                <i class="lock-bg"></i>
                                <label for="oldPassword">Old Password</label>
                                <input oninput="checkLabel(this); checkPassword('#password',this,'#passwordCheckMessage'); checkPasswordConfirm('#password', this, '#confirmPassword', '#passwordConfirmMessage')"
                                       id="oldPassword" type="password" class="form-control"
                                       name="oldPass" required>
                            </div>
                            <div class="input-group">
                                <i class="lock-bg"></i>
                                <label for="password">New Password</label>
                                <input oninput="checkLabel(this); checkPassword(this,'#oldPassword', '#passwordCheckMessage'); checkPasswordConfirm(this, '#oldPassword', '#confirmPassword', '#passwordConfirmMessage')"
                                       id="password"
                                       type="password" class="form-control" name="password" required>
                                <span class="popup">
                                    <i>
                                        <span class="popup-top-left dont-show" id="passwordCheckMessage"></span></i>
                                </span>
                            </div>
                            <div class="input-group">
                                <i class="lock-bg"></i>
                                <label for="confirmPassword">Confirm New Password</label>
                                <input oninput="checkLabel(this); checkPasswordConfirm('#password', '#oldPassword', this, '#passwordConfirmMessage')"
                                       id="confirmPassword" type="password"
                                       class="form-control" required>
                                <span class="popup">
                                    <i>
                                        <span class="popup-top-left dont-show"
                                              id="passwordConfirmMessage"></span></i>
                                </span>
                            </div>
                        </div>
                        <div class="text-center">
                            <button type="submit"
                                    onclick="ajaxPostForm('#changePassword',['#oldPassword','#password', '#confirmPassword'],'#passwordChangeMessage', true)"
                                    class="btn btn-default btn-med" id="changePasswordBtn" disabled>
                                Change Password
                            </button>
                        </div>
                    </form>
                    <% if (!_betaFeatures.active || _alerts.lastUpdated.length > 0) { %>
                        <div class="card-footer">
                            <% if (!_betaFeatures.active) { %>
                                <button class="btn btn-sm" style="margin: 0.1rem"
                                        onclick="showCard('#activateBetaDisplay');">
                                    <label style="margin: 0; cursor: pointer;">Enable Experiments
                                        <span class="fa fa-external-link-square"></span>
                                    </label>
                                </button>
                            <% } %>
                            <% if (_alerts.lastUpdated.length > 0) { %>
                                <button class="btn btn-sm" style="margin: 0.1rem"
                                        onclick="showCard('#apiKeyDisplay');">
                                    <label style="margin: 0; cursor: pointer;">Open API Key Panel
                                        <span class="fa fa-external-link-square"></span>
                                    </label>
                                </button>
                            <% } %>
                            <% if (discordID) { %>
                                <button id="discordCardBtn" class="btn btn-sm" style="margin: 0.1rem"
                                        onclick="showCard('#discordDisplay');">
                                    <label style="margin: 0; cursor: pointer;">Open Discord Panel
                                        <span class="fa fa-external-link-square"></span>
                                    </label>
                                </button>
                            <% } %>
                        </div>
                    <% } %>
                </div>
            </div>
            <div id="settings-3" class="tabcontent">
                <div class="card-body">
                    <div class="card-footer">
                        <h5>Display<br><small style="opacity: 0.5">Changing these settings will immediately refresh the
                                page.</small></h5>
                        <form action="/setShowNonAcademic" method="post">
                            <label class="slider-container">
                                <label class="switch">
                                    <input id="showNonAcademicCheckbox" type="checkbox" name="showNonAcademic"
                                    <% if (_appearance.showNonAcademic) { %> checked="checked"
                                            <% } %>
                                           onchange="$(this).closest('form').trigger('submit')"
                                    >
                                    <span class="slider"></span>
                                </label>
                                <label for="showNonAcademicCheckbox">
                                    Show Non-Academic Classes (<%= nonAcademicCount %> this semester)
                                </label>
                            </label>
                        </form>
                    </div>
                    <div class="card-footer">
                        <h5>Performance
                            <br>
                            <small style="opacity: 0.5">Changing these settings will immediately refresh the
                                page.</small></h5>
                        <label class="slider-container">
                            <label class="switch">
                                <input id="animateWhenUnfocused" type="checkbox" name="animateWhenUnfocused"
                                <% if (_appearance.animateWhenUnfocused) { %>
                                       checked="checked"
                                        <% } %>
                                       onchange="changeSetting('animateWhenUnfocused', !appearance.animateWhenUnfocused)"
                                >
                                <span class="slider"></span>
                            </label>
                            <label for="animateWhenUnfocused">
                                Don't Pause Effects When Window is not in Focus <span class="popup"><i
                                            class="fa fa-question-circle"><span
                                                class="popup-top-left">When enabled, certain animations and effects
                                            that
                                            are usually paused to conserve resources will continue to play even if
                                            you
                                            are on a different tab or window.
                                        </span></i></span> <span class="popup hide-in-firefox"><i
                                            class="fa fa-exclamation-triangle">
                                        <span class="popup-right-bottom">WARNING: This can cause issues such as the
                                            horizontal snow line</span></i></span>
                            </label>
                        </label>
                        <label class="slider-container">
                            <label class="switch">
                                <input id="showFps" type="checkbox" name="showFps"
                                <% if (_appearance.showFps) { %>
                                       checked="checked"
                                        <% } %>
                                       onchange="changeSetting('showFps', !appearance.showFps)"
                                >
                                <span class="slider"></span>
                            </label>
                            <label for="showFps">
                                Stats for Nerds <span class="popup"><i
                                            class="fa fa-question-circle"><span
                                                class="popup-right-bottom">When enabled, displays performance info in
                                            the bottom
                                            left
                                            corner of the screen
                                        </span></i></span>
                            </label>
                        </label>
                        <hr>
                        <div>
                            <h6>Performance Log <span class="popup"><i
                                            class="fa fa-question-circle"><span
                                                class="popup-right-bottom">Performance issues will be displayed here
                                        </span></i></span></h6>
                            <div id="performance-issues-messages"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="settings-4" class="tabcontent">
                <div class="card-body">
                    <div class="card-footer">
                        <h5>Troubleshooting</h5>
                        <label style="display: flex; font-size: 1rem; justify-content: flex-start; align-items: center">
                            <label class="switch">
                                <input
                                        id="enableLoggingToggle"
                                        style="margin: 0; display: flex"
                                        type="checkbox"
                                        name="remoteAccess"
                                <% if (enableLogging) { %>
                                        checked
                                        <% } %>
                                        onchange="changeSetting('enableLogging', !enableLogging);"
                                >
                                <span class="slider"></span>
                            </label>
                            <label style="margin: 0 0 0 1rem; justify-content: center; align-items: center; cursor: pointer"
                                   onclick="$('#enableLoggingToggle').trigger('click')">Show Logs in Console<span
                                        class="popup"><i class="fa fa-question-circle"
                                                         style="margin-left: 0.4rem"><span
                                                class="popup-right-top">Shows logs in console for debugging
                                            purposes.</span></i></span></label>
                        </label>
                        <form id="remoteAccess" class="form-signin" action="/setRemoteAccess" method="post">
                            <label style="display: flex; font-size: 1rem; justify-content: flex-start; align-items: center">
                                <label class="switch">
                                    <input
                                            id="remoteAccessToggle"
                                            style="margin: 0; display: flex"
                                            type="checkbox"
                                            name="remoteAccess"
                                    <% if (_alerts.remoteAccess === "allowed") { %>
                                            checked
                                            <% } %>
                                            onchange="ajaxPostForm('#remoteAccess',[],'',true); $('#remoteAccess').trigger('submit');"
                                    >
                                    <span class="slider"></span>
                                </label>
                                <label style="margin: 0 0 0 1rem; justify-content: center; align-items: center; cursor: pointer"
                                       onclick="$('#remoteAccessToggle').trigger('click')">Allow
                                    Remote Access<span
                                            class="popup"><i class="fa fa-question-circle"
                                                             style="margin-left: 0.4rem"><span
                                                    class="popup-right-top">When enabled, developers can view your
                                                personal home page to help with
                                                troubleshooting.</span></i></span></label>
                            </label>
                        </form>
                    </div>
                    <div class="card-footer">
                        <h5 style="padding-bottom: 12px">Join Our Discord Server</h5>
                        <iframe class="discord-iframe"
                                allowtransparency="true"
                                sandbox="allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts">
                        </iframe>
                        <span></span>
                        <br><br>
                        <p>You can also <a href="https://discord.gg/qqbmUWvTwZ">click here</a> to join.</p>
                    </div>
                    <div class="card-footer">
                        <h5>Email Us</h5>
                        <p><u><a href="mailto: support@graderoom.me">support@graderoom.me</a></u></p>
                    </div>
                    <div class="card-footer">
                        <h5>Tutorial Progress
                            <span class="popup">
                                <i class="fa fa-question-circle">
                                    <span class="popup-right-top">Explore parts of Graderoom with blue popups to
                                        complete the tutorial. The tutorial cannot be completed on the mobile
                                        site.</span>
                                </i>
                            </span></h5>
                        <div style="display:flex; flex-flow: row; align-items: center; justify-content: stretch;">
                            <div class="progress" style="width: 100%">
                                <div class="progress-bar progress-bar-success" role="progressbar" style="width:100%"
                                     id="tutorialStatus">
                                    Loading...
                                </div>
                            </div>
                            <button class="btn btn-sm"
                                    style="margin: 0.1rem; width: fit-content; width: -moz-fit-content"
                                    type="submit"
                                    onclick="resetTutorial()">Reset
                            </button>
                        </div>
                    </div>
                    <div class="card-footer">
                        <a style="margin: 0.1rem" target="_blank" href="/terms">
                            <label style="margin: 0; cursor: pointer;">Terms And Conditions
                                <span class="fa fa-external-link-square"></span>
                            </label>
                        </a>
                        <a style="margin: 0.1rem" target="_blank" href="/privacy">
                            <label style="margin: 0; cursor: pointer;">Privacy Policy
                                <span class="fa fa-external-link-square"></span>
                            </label>
                        </a>
                    </div>
                </div>
            </div>
            <div id="settings-5" class="tabcontent">
                <div class="card-body">
                    <div class="card-footer">
                        <h5>Description</h5>
                        <p>Graderoom is an advanced grade visualizer designed to help students better understand
                            their
                            grades. Graderoom was created by students at Bellarmine College Preparatory in San Jose,
                            CA,
                            but is in no way affiliated with the school, or it's faculty and staff. We welcome
                            feedback
                            from our users and are actively working on features and improvements.
                        </p>
                    </div>
                    <div class="card-footer">
                        <h5>Contributors <small><span class="changelog-fixes"><i class="fa fa-github"></i> <a href="https://github.com/graderoom/graderoom-website/graphs/contributors?type=a" target="_blank">View on GitHub <i class="fa fa-external-link-square"></i></a></span></small></h5>
                        <h6>Joel Jothiprakasam BCP '21</h6>
                        <h6>Bryce Hackel BCP '21</h6>
                        <h6>Abhinav Nallapa BCP '21</h6>
                        <h6>Robert Ganino BCP '20</h6>
                        <h6>Krish Pandit BCP '21</h6>
                        <h6>Camilo Sanchez BCP '27</h6>
                    </div>
                    <div class="card-footer">
                        <h5>History</h5>
                        <h6>First Commit: September 17, 2019</h6>
                        <h6>First Beta Release: October 2, 2019</h6>
                        <h6>First Stable Release: February 27, 2020</h6>
                    </div>
                </div>
            </div>
            <% if (_betaFeatures.active) { %>
                <div id="settings-6" class="tabcontent">
                    <div class="card-body">
                        <div class="card-footer">
                            <h5>Thanks for trying out new features before they're released!</h5>
                            <p>Your choices to enable the features listed below contribute to the speed at which
                                these
                                features are officially released. We will continue to add more features as time goes
                                on.
                            </p>
                        </div>
                        <br>
                        <form id="betaFeatures" action="/betaFeatures" method="post">
                            <% if (school === "bellarmine") { %>
                            <div class="card-footer">
                                <label class="slider-container">
                                    <label style="margin-left: 0;" for="localScraping">
                                        Enable Local Scraping
                                    </label>
                                    <label class="switch">
                                        <input id="localScraping" type="checkbox"
                                               name="localScraping"
                                        <% if (_betaFeatures.localScraping) { %>
                                               checked="checked"
                                                <% } %>
                                               onchange="$($(this)[0].form).trigger('submit')"
                                        >
                                        <span class="slider"></span>
                                    </label>
                                </label>
                                <small>
                                    Enabled: Uses Graderoom browser extension to scrape grades locally on your computer
                                </small>
                                <br>
                                <small>
                                    Disabled: Default
                                </small>
                            </div>
                            <% } else { %>
                            <div class="card-footer">
                                <h5><small style="opacity: 0.5">No Experiments at the moment. Check back later!</small>
                                </h5>
                            </div>
                            <% } %>
                        </form>
                        <form action="/leavebeta" method="post">
                            <button class="btn btn-sm" type="submit">Disable Experiments</button>
                        </form>
                    </div>
                </div>
            <% } %>
        </div>
    </div>
</div>

<!-- Custom JavaScript -->
<script type="text/javascript">

    let checkingFirstName;
    let checkingLastName;
    let checkingGradYear;
    let settingsBtns = $("#settingsCardDisplay .tablinks");

    function checkFirstName(inputID, messageDivID) {
        const firstNameRegex = new RegExp(/^[a-z]+(?:-[a-z]+)*$/i);

        let firstName = $(inputID)[0].value;
        let icon = $($($(inputID)[0].nextElementSibling)[0].firstElementChild);

        $(messageDivID).addClass("dont-show").removeClass("always-show");
        icon.attr("class", "fa fa-pulse fa-spinner");
        $(inputID).removeClass("invalid").addClass("loading");
        if (checkingFirstName) {
            clearTimeout(checkingFirstName);
        }

        if (firstName.length === 0) {
            firstName = getPersonalInfo(schoolUsername).firstName;
            $(messageDivID).addClass("always-show").removeClass("dont-show").text("Your name will be set back to " + firstName + " when you click outside of the input field");
            icon.attr("class", "fa fa-exclamation-circle");
            $(inputID).removeClass("loading").addClass("invalid").blur(() => {
                $(inputID).val(firstName);
                $(inputID).trigger("input");
                $(inputID).off("blur");
            });
            return;
        }

        checkingFirstName = setTimeout(() => {
            if (!firstNameRegex.test(firstName)) {
                $(messageDivID).removeClass("dont-show").addClass("always-show").text("First name can only contain letters and/or hyphens.");
                icon.attr("class", "fa fa-exclamation-circle");
                $(inputID).removeClass("loading").addClass("invalid");
                return;
            }
            $.ajax({
                       url: "/setPersonalInfo", type: "POST", async: true, data: {firstName: firstName}
                   }).done((response) => {
                if (typeof response === "string" && response.startsWith("<!")) {  // If logged out
                    $(".session-timeout").show();
                    $("body").find("*").not(".session-timeout").remove();
                    return;
                }
                // Make sure value is still the same
                if (firstName === $(inputID)[0].value) {
                    $(messageDivID).removeClass("dont-show").removeClass("always-show").text(response);
                    icon.attr("class", "fa fa-check-circle");
                    $(inputID).removeClass("loading").removeClass("invalid");
                    personalInfo.firstName = firstName;
                    updateNameDisplay();
                }
            }).fail((data) => {
                // Make sure value is still the same
                if (firstName === $(inputID)[0].value) {
                    $(messageDivID).removeClass("dont-show").addClass("always-show").html(data.responseText);
                    icon.attr("class", "fa fa-exclamation-circle");
                    $(inputID).removeClass("loading").addClass("invalid");
                }
            });
        }, 400);
    }

    function checkLastName(inputID, messageDivID) {
        const lastNameRegex = new RegExp(/^[a-z]+(?:-[a-z]+)*$/i);

        let lastName = $(inputID)[0].value;
        let icon = $($($(inputID)[0].nextElementSibling)[0].firstElementChild);

        $(messageDivID).addClass("dont-show").removeClass("always-show");
        icon.attr("class", "fa fa-pulse fa-spinner");
        $(inputID).removeClass("loading").removeClass("invalid");
        if (checkingLastName) {
            clearTimeout(checkingLastName);
        }

        if (school !== "basis" && lastName.length === 0) {
            lastName = getPersonalInfo(schoolUsername).lastName;
            $(messageDivID).addClass("always-show").removeClass("dont-show").text(`Your name will be set back to ${lastName} when you click outside of the input field`);
            icon.attr("class", "fa fa-exclamation-circle");
            $(inputID).removeClass("loading").addClass("invalid").blur(() => {
                $(inputID).val(lastName);
                $(inputID).trigger("input");
                $(inputID).off("blur");
            });
            return;
        }

        checkingLastName = setTimeout(() => {
            if (!lastNameRegex.test(lastName)) {
                $(messageDivID).removeClass("dont-show").addClass("always-show").text("Last name can only contain letters and/or hyphens.");
                icon.attr("class", "fa fa-exclamation-circle");
                $(inputID).removeClass("loading").addClass("invalid");
                return;
            }
            $.ajax({
                       url: "/setPersonalInfo", type: "POST", async: true, data: {lastName: lastName}
                   }).done((response) => {
                if (typeof response === "string" && response.startsWith("<!")) {  // If logged out
                    $(".session-timeout").show();
                    $("body").find("*").not(".session-timeout").remove();
                    return;
                }
                // Make sure value is still the same
                if (lastName === $(inputID)[0].value) {
                    $(messageDivID).removeClass("dont-show").removeClass("always-show").text(response);
                    icon.attr("class", "fa fa-check-circle");
                    $(inputID).removeClass("loading").removeClass("invalid");
                    personalInfo.lastName = lastName;
                    updateNameDisplay();
                }
            }).fail((data) => {
                // Make sure value is still the same
                if (lastName === $(inputID)[0].value) {
                    $(messageDivID).removeClass("dont-show").addClass("always-show").html(data.responseText);
                    icon.attr("class", "fa fa-exclamation-circle");
                    $(inputID).removeClass("loading").addClass("invalid");
                }
            });
        }, 400);
    }

    function checkGradYear(inputID, messageDivID) {
        const gradYearRegex = new RegExp("^2[0-9][1-9][0-9]$");

        let gradYear = $(inputID)[0].valueAsNumber;
        let icon = $($($(inputID)[0].nextElementSibling)[0].firstElementChild);

        $(messageDivID).addClass("dont-show").removeClass("always-show");
        icon.attr("class", "fa fa-pulse fa-spinner");
        $(inputID).removeClass("invalid").addClass("loading");
        if (checkingGradYear) {
            clearTimeout(checkingGradYear);
        }

        checkingGradYear = setTimeout(() => {
            if (gradYear.length !== 0 && !gradYearRegex.test(gradYear)) {
                $(messageDivID).removeClass("dont-show").addClass("always-show").text("That doesn't look like a valid graduation year");
                icon.attr("class", "fa fa-exclamation-circle");
                $(inputID).removeClass("loading").addClass("invalid");
                return;
            }
            $.ajax({
                       url: "/setPersonalInfo", type: "POST", async: true, data: {graduationYear: gradYear}
                   }).done((response) => {
                if (typeof response === "string" && response.startsWith("<!")) {  // If logged out
                    $(".session-timeout").show();
                    $("body").find("*").not(".session-timeout").remove();
                    return;
                }
                // Make sure value is still the same
                if (gradYear === $(inputID)[0].valueAsNumber) {
                    $(messageDivID).removeClass("dont-show").removeClass("always-show").text(response);
                    icon.attr("class", "fa fa-check-circle");
                    $(inputID).removeClass("loading").removeClass("invalid");
                    personalInfo.graduationYear = gradYear;
                    updateNameDisplay();
                }
            }).fail((data) => {
                // Make sure value is still the same
                if (gradYear === $(inputID)[0].valueAsNumber) {
                    $(messageDivID).removeClass("dont-show").addClass("always-show").html(data.responseText);
                    icon.attr("class", "fa fa-exclamation-circle");
                    $(inputID).removeClass("loading").addClass("invalid");
                }
            });
        }, 400);
    }

    function updateNameDisplay(schoolUsername) {
        if (schoolUsername) {
            let {firstName, lastName, graduationYear} = getPersonalInfo(schoolUsername);
            let name = [];
            if (!!firstName) {
                name.push(firstName);
            }
            if (!!lastName) {
                name.push(lastName);
            }
            if (!!graduationYear && graduationYear > 2010) {
                name.push(`'${graduationYear - 2000}`);
            }
            $("#nameDisplay").text(name.join(" "));
            $("#firstName").val(firstName);
            $("#lastName").val(lastName);
            $("#graduationYear").val(graduationYear);
        } else {
            let name = [];
            if (!!personalInfo.firstName) {
                name.push(personalInfo.firstName);
            }
            if (!!personalInfo.lastName) {
                name.push(personalInfo.lastName);
            }
            if (!!personalInfo.graduationYear && personalInfo.graduationYear > 2010) {
                name.push(`'${personalInfo.graduationYear - 2000}`);
            }
            $("#nameDisplay").text(name.join(" "));
        }
    }

    function getPersonalInfo(email) {
        if (school === "bellarmine") {
            // First Name
            let firstName = email.substring(0, email.indexOf("."));
            firstName = firstName[0].toUpperCase() + firstName.substring(1).toLowerCase();

            // Last Name
            let lastName = email.substring(email.indexOf(".") + 1, email.indexOf(email.match(/\d/)));
            lastName = lastName[0].toUpperCase() + lastName.substring(1).toLowerCase();

            // Graduation Year
            let graduationYear = email.substring(email.indexOf(email.match(/\d/)), email.indexOf("@"));
            if (graduationYear) {
                graduationYear = parseInt(graduationYear);
                graduationYear += 2000;
            }

            return {firstName, lastName, graduationYear};
        }
        if (school === "ndsj") {
            // First Name
            let firstName = email.substring(0, 1).toUpperCase();

            // Last Name
            let lastName = email.substring(1, email.indexOf(email.match(/\d/)));
            lastName = lastName[0].toUpperCase() + lastName.substring(1).toLowerCase();

            // Graduation Year
            let graduationYear = email.substring(email.indexOf(email.match(/\d/)), email.indexOf("@"));
            if (graduationYear) {
                graduationYear = parseInt(graduationYear);
                graduationYear += 2000;
            }

            return {firstName, lastName, graduationYear};
        }
        if (school === "basis") {
            let firstName = email.indexOf("_") === -1 ? email : email.substring(0, email.indexOf("_"));
            firstName = firstName[0].toUpperCase() + firstName.substring(1).toLowerCase();
            let lastName = "";
            let graduationYear = null;

            return {firstName, lastName, graduationYear};
        }
    }

    function manageGradeSyncCheckbox() {
        let gradeSyncDiv = $("#gradeSyncDiv");
        if (gradeSyncDiv.css("display") === "block" && !$("#gradeSyncToggle").prop("checked")) {
            gradeSync = false;
            ajaxPostForm("#gradeSync", [], "", true);
            $("#gradeSync").trigger("submit");
            gradeSyncDiv.hide();
            $("#syncGradesDiv").show();
            $(".gradeSyncEnabled").hide();
            clearTimeout(checkLastUpdated);
            $(".updateGradesMessage").removeClass("alert-danger").removeClass("alert-success").addClass("alert-info").find(".messageTxt").text("GradeSync is not enabled");
        } else {
            $("#savePasswordToggle:not(:checked)").trigger("click");
            $("#syncGradesDiv").show();
            showCard("#updateGradesDisplay");
        }
    }

    function reload() {
        location.reload();
    }

    function setColorPalette(palette) {
        if (!palette) {
            palette = appearance.colorPalette;
        }
        let buttons = $("#color-scheme-picker button:not([disabled])");
        buttons.prop("disabled", true);
        $.ajax({
                   url: "/setColorPalette",
                   type: "POST",
                   data: {preset: palette, shuffleColors: JSON.stringify($("#shuffleToggle").is(":checked"))},
                   async: true
               }).done((response) => {
            if (typeof response === "string" && response.startsWith("<!")) {  // If logged out
                $(".session-timeout").show();
                $("body").find("*").not(".session-timeout").remove();
                return;
            }
            $("#color-scheme-picker div").each(function () {
                if (this.id === palette) {
                    $(this).find("i").css("opacity", 1);
                } else {
                    $(this).find("i").css("opacity", 0);
                }
            });
            if (palette === "custom") {
                $(".editClassColor").addClass("visible");
                $("#shuffleToggle").parent(".switch").parent(".slider-container").hide();
            } else {
                $(".editClassColor").removeClass("visible");
                $("#shuffleToggle").parent(".switch").parent(".slider-container").show();
                updateClassColors(!appearance.showNonAcademic ? academicIndices.map(n => response[n]) : response);
            }
            appearance.colorPalette = palette;
            setTimeout(() => {
                buttons.prop("disabled", false);
            }, 1000);
        });
    }

    function updateCustomColor(serverClassIndex, colorHex) {
        let color = colorHex;
        if (colorHex.startsWith("#")) {
            color = colorHex.substring(1);
        }
        if (color.length === 3) {
            color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];
        }
        if (color.length !== 6) {
            return;
        }
        let buttons = $("#color-scheme-picker button:not([disabled])");
        buttons.prop("disabled", true);
        $.ajax({
                   url: "/updateCustomColor",
                   type: "POST",
                   data: {index: serverClassIndex, color: color}}).done((response) => {
            if (typeof response === "string" && response.startsWith("<!")) {  // If logged out
                $(".session-timeout").show();
                $("body").find("*").not(".session-timeout").remove();
                return;
            }
            updateClassColors(!appearance.showNonAcademic ? academicIndices.map(n => response[n]) : response);
            setTimeout(() => {
                buttons.prop("disabled", false);
            }, 1000);
        });
    }

    function updateClassColors(colorArray) {
        let _colors = colorArray;
        for (let i = 0; i < _colors.length; i++) {
            $("#classColor" + i).css("color", _colors[i]);
            $("#customColor" + i).val(_colors[i]);
        }
        colors = colorArray;
        setupColorStuff();
    }

    function updateSchoolUsernameDisplay() {
        document.getElementById("schoolUsernameDisplay").textContent = document.getElementById("school_email").value;
    }

    function openTab(tabIndex) {
        // Declare all variables
        let tabName = "#settings-" + tabIndex;

        // Get all elements with class="tabcontent" and hide them
        $("#settingsCardDisplay .tabcontent").removeClass("show");

        // Get all elements with class="tablinks" and remove the class "active"
        settingsBtns.removeClass("active");

        // Show the current tab, and add an "active" class to the button that opened the tab
        $(tabName).addClass("show");
        $(settingsBtns[tabIndex]).addClass("active");
        currentSettingsTab = tabIndex;

        if (currentSettingsTab === 4) {
            setupDiscord(true);
        }
    }

    function checkLabel(input) {
        let label = $($(input)[0].previousElementSibling);
        input = $(input);
        if (input[0].value !== "") {
            if (!label.hasClass("label-active")) {
                label.addClass("label-active");
            }
        } else {
            label.removeClass("label-active");
        }
    }

    let checkingPassword;

    function checkPassword(inputID, oldID, messageDivID) {
        const lowerCaseRegex = new RegExp("^(?=.*[a-z])");
        const upperCaseRegex = new RegExp("^(?=.*[A-Z])");
        const numericRegex = new RegExp("^(?=.*[0-9])");

        let password = $(inputID)[0].value;
        let oldPassword = $(oldID)[0].value;
        let icon = $($($(inputID)[0].nextElementSibling)[0].firstElementChild);
        if (messageDivID) {
            $(messageDivID).addClass("dont-show").removeClass("always-show");
            icon.attr("class", "fa fa-pulse fa-spinner");
            $(inputID).removeClass("invalid").addClass("loading");
            if (checkingPassword) {
                clearTimeout(checkingPassword);
            }

            if (password === "") {
                $(messageDivID).addClass("dont-show").removeClass("always-show");
                icon.attr("class", "");
                $(inputID).removeClass("loading").removeClass("invalid");
                invalidate();
                return;
            }
            checkingPassword = setTimeout(() => {
                if (oldPassword === "") {
                    $(messageDivID).removeClass("dont-show").addClass("always-show").text("Enter your old password first");
                    icon.attr("class", "fa fa-exclamation-circle");
                    $(inputID).removeClass("loading").addClass("invalid");
                    invalidate();
                    return;
                }
                if (password === oldPassword) {
                    $(messageDivID).removeClass("dont-show").addClass("always-show").text("Your new password should be different from your old password");
                    icon.attr("class", "fa fa-exclamation-circle");
                    $(inputID).removeClass("loading").addClass("invalid");
                    invalidate();
                    return;
                }
                let message;
                if (password.length < 6) {
                    message = "Your password must be at least 6 characters long";
                } else if (password.length > 64) {
                    message = "Your password must be fewer than 64 characters long";
                } else if (!lowerCaseRegex.test(password)) {
                    message = "Your password must include at least one lowercase character";
                } else if (!upperCaseRegex.test(password)) {
                    message = "Your password must include at least one uppercase character";
                } else if (!numericRegex.test(password)) {
                    message = "Your password must include at least one number";
                } else {
                    message = "Strong password";
                    $(messageDivID).removeClass("dont-show").removeClass("always-show").text(message);
                    icon.attr("class", "fa fa-check-circle");
                    $(inputID).removeClass("loading").removeClass("invalid");
                    validate();
                    return;
                }
                if (message) {
                    $(messageDivID).removeClass("dont-show").addClass("always-show").css("color", "red").text(message);
                    icon.attr("class", "fa fa-exclamation-circle");
                    $(inputID).css("border-bottom-color", "red");
                    invalidate();
                } else {
                    $(messageDivID).addClass("dont-show").removeClass("always-show");
                    icon.attr("class", "");
                    $(inputID).removeClass("loading").removeClass("invalid");
                }
            }, 400);
        } else {
            return !((password.length < 6) || (password.length > 64) || (!lowerCaseRegex.test(password)) || (!upperCaseRegex.test(password)) || (!numericRegex.test(password)));
        }
    }

    let checkingPasswordConfirm;

    function checkPasswordConfirm(inputID, oldID, confirmID, messageDivID) {
        let password = $(inputID)[0].value;
        let confirm = $(confirmID)[0].value;
        let icon = $($($(confirmID)[0].nextElementSibling)[0].firstElementChild);
        if (messageDivID) {
            $(messageDivID).addClass("dont-show").removeClass("always-show");
            icon.attr("class", "fa fa-pulse fa-spinner");
            $(confirmID).removeClass("invalid").addClass("loading");
            if (checkingPasswordConfirm) {
                clearTimeout(checkingPasswordConfirm);
            }

            if (confirm === "") {
                $(messageDivID).addClass("dont-show").removeClass("always-show");
                icon.attr("class", "");
                $(confirmID).removeClass("loading").removeClass("invalid");
                invalidate();
                return;
            }
            checkingPasswordConfirm = setTimeout(() => {
                if (checkPassword(inputID, oldID)) {
                    if (password === confirm) {
                        $(messageDivID).removeClass("dont-show").removeClass("always-show").text("Passwords match");
                        icon.attr("class", "fa fa-check-circle");
                        $(confirmID).removeClass("loading").removeClass("invalid");
                        validate();
                    } else {
                        $(messageDivID).removeClass("dont-show").addClass("always-show").text("Passwords do not match");
                        icon.attr("class", "fa fa-exclamation-circle");
                        $(confirmID).removeClass("loading").addClass("invalid");
                        invalidate();
                    }
                } else {
                    $(messageDivID).removeClass("dont-show").addClass("always-show").text("Enter a valid password first");
                    icon.attr("class", "fa fa-exclamation-circle");
                    $(confirmID).removeClass("loading").addClass("invalid");
                    invalidate();
                }
            }, 400);
        } else {
            invalidate();
            return checkPassword(inputID, oldID) && password === confirm;
        }
    }

    let passwordDiv = $("#password");
    let oldPasswordDiv = $("#oldPassword");
    let confirmDiv = $("#confirmPassword");
    let signupBtn = $("#changePasswordBtn");

    function validate() {
        if (!checkPasswordConfirm(passwordDiv, oldPasswordDiv, confirmDiv)) { // Invalid or Unconfirmed Password
            invalidate();
            return;
        }
        signupBtn.prop("disabled", "");
    }

    function invalidate() {
        signupBtn.prop("disabled", "disabled");
    }

    function closeMessage(id) {
        document.getElementById(id).style.display = "none";
    }

    function resetTutorial() {
        $.ajax({
                   url: "/resetTutorial", type: "POST", async: true
               }).done((response) => {
            if (typeof response === "string" && response.startsWith("<!")) {  // If logged out
                $(".session-timeout").show();
                $("body").find("*").not(".session-timeout").remove();
                return;
            }
            alerts.tutorialStatus = JSON.parse(response);
            setupTutorialPopups();
            updateTutorialProgress();
        });
    }

    function updateTutorialProgress() {
        const {tutorialStatus} = alerts;
        let numGotten = Object.values(tutorialStatus).filter(x => x).length;
        let numTotal = Object.values(tutorialStatus).length;
        let progress = numGotten / numTotal * 100;
        let bar = $("#tutorialStatus").text(progress !== 0 ? Math.round(progress) + "%" : "").css("width", progress + "%").parents(".progress");
        let emptyBars = $(".empty-progress");
        let i;
        for (i = 0; i < numTotal - numGotten; i++) {
            if (i >= emptyBars.length) {
                bar.append("<div class=\"progress-bar empty-progress\" role=\"progressbar\" style=\"width: " + (100 / numTotal) + "%\"></div>");
            } else {
                $(emptyBars[i]).css("width", (100 / numTotal) + "%");
            }
        }
        for (i; i < emptyBars.length; i++) {
            $(emptyBars[i]).remove();
        }
    }

    function setupDonos() {
        let donoDiv = $("#donations");
        let donoProgressDiv = $("#donationProgress");
        let progressBars = donoProgressDiv.find("div.progress-bar");
        $(progressBars).css("width", "0");
        $(progressBars[0]).css("width", "12.5%");
        if (donoData.length === 0) {
            donoDiv.html(`<div style="text-align: center">No Donations Yet</div>`);
            $(progressBars[4]).css("width", "87.5%");
            donor = false;
            plus = false;
            premium = false;
        } else {
            let donoTable = `<table id="donoTable"><thead><tr><th>Platform</th><th>Amount Paid</th><th>Actual Value</th><th>Date Donated</th></tr></thead><tbody>`;
            let totalPaid = 0;
            let totalReceived = 0;
            for (let i = 0; i < donoData.length; i++) {
                let platform = donoData[i].platform;
                let paid = donoData[i].paidValue;
                let received = donoData[i].receivedValue;
                totalPaid += paid;
                totalReceived += received;
                let date = donoData[i].dateDonated;

                if (platform === "paypal") platform = "PayPal";
                else if (platform === "zelle") platform = "Zelle";
                else if (platform === "venmo") platform = "Venmo";
                else if (platform === "cash") platform = "Cash";

                donoTable += `<tr><td class="dono-platform-${platform.toLowerCase()}">${platform}</td><td>$${paid.toFixed(2)}</td><td>$${received.toFixed(2)}</td><td>${new Date(date).toLocaleDateString()}</td></tr>`;
            }
            donoTable += `<tfoot><tr><td style="text-align: right">Total:</td><td>$${totalPaid.toFixed(2)}</td><td>$${totalReceived.toFixed(2)}</td><td></td></tr></tfoot></tbody></table>`;
            donoDiv.html(donoTable);

            let minDonor = 0.01;
            let minPlus = 3;
            let minPremium = 5;

            if (totalReceived <= minDonor) {
                let width = 12.5 * totalReceived / minDonor;
                $(progressBars[1]).css("width", `${width}%`);
                $(progressBars[4]).css("width", `${100 - 12.5 - width}%`);
            } else if (totalReceived <= minPlus) {
                $(progressBars[1]).css("width", "12.5%");
                let width = 25 * (totalReceived - minDonor) / (minPlus - minDonor);
                $(progressBars[2]).css("width", `${width}%`);
                $(progressBars[4]).css("width", `${100 - 12.5 - 12.5 - width}%`);
            } else {
                $(progressBars[1]).css("width", "12.5%");
                $(progressBars[2]).css("width", `25%`);
                let width = Math.min(50, 50 * (totalReceived - minPlus) / (minPremium - minPlus));
                $(progressBars[3]).css("width", `${width}%`);
                $(progressBars[4]).css("width", `${100 - 12.5 - 12.5 - 25 - width}%`);
            }
            donor = totalReceived >= minDonor;
            plus = totalReceived >= minPlus;
            premium = totalReceived >= minPremium;
        }
    }

</script>
